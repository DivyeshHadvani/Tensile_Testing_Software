# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Manager_home_page.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_manager_home_page(object):
    def setupUi(self, manager_home_page):
        manager_home_page.setObjectName("manager_home_page")
        manager_home_page.resize(882, 757)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        manager_home_page.setFont(font)
        self.centralwidget = QtWidgets.QWidget(manager_home_page)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(170, 20, 661, 641))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.tabWidget.setFont(font)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.create_user_profile_PB = QtWidgets.QPushButton(self.tab_3)
        self.create_user_profile_PB.setGeometry(QtCore.QRect(130, 150, 241, 131))
        self.create_user_profile_PB.setObjectName("create_user_profile_PB")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        
        # Add a QLineEdit for search input
        self.search_input = QtWidgets.QLineEdit(self.centralwidget)
        self.search_input.setGeometry(QtCore.QRect(10, 10, 150, 25))
        self.search_input.setObjectName("search_input")
        self.search_input.textChanged.connect(self.search_table)

        self.users_profile_TableWidget = QtWidgets.QTableWidget(self.tab)
        # self.users_profile_TableWidget.setEnabled(False)
        self.users_profile_TableWidget.setGeometry(QtCore.QRect(10, 10, 621, 351))
        self.users_profile_TableWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.users_profile_TableWidget.setFrameShadow(QtWidgets.QFrame.Raised)
        self.users_profile_TableWidget.setLineWidth(1)
        self.users_profile_TableWidget.setMidLineWidth(0)
        self.users_profile_TableWidget.setGridStyle(QtCore.Qt.DashDotDotLine)
        self.users_profile_TableWidget.setRowCount(10)
        self.users_profile_TableWidget.setColumnCount(5)
        self.users_profile_TableWidget.setObjectName("users_profile_TableWidget")
        
        # self.users_profile_TableWidget.setHorizontalHeaderLabels(["Sr.", "User Name", "First Name", "Last Name", "Action"])  # Set header labels
        # Adjust table properties
        self.users_profile_TableWidget.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        self.users_profile_TableWidget.verticalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)
        
        # Create a shared model
        self.model = QtGui.QStandardItemModel()
        
        

        
        item = QtWidgets.QTableWidgetItem()
        self.users_profile_TableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.users_profile_TableWidget.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.users_profile_TableWidget.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.users_profile_TableWidget.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.users_profile_TableWidget.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.users_profile_TableWidget.setItem(2, 4, item)
        self.users_profile_TableWidget.horizontalHeader().setHighlightSections(True)
        self.users_profile_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.tabWidget.addTab(self.tab, "")
        
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tableView = QtWidgets.QTableView(self.tab_2)
        self.tableView.setGeometry(QtCore.QRect(10, 10, 631, 481))
        self.tableView.setObjectName("tableView")
        self.tabWidget.addTab(self.tab_2, "")
        manager_home_page.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(manager_home_page)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 882, 26))
        self.menubar.setObjectName("menubar")
        manager_home_page.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(manager_home_page)
        self.statusbar.setObjectName("statusbar")
        manager_home_page.setStatusBar(self.statusbar)
        
        self.model = QtGui.QStandardItemModel()
        self.model.setHorizontalHeaderLabels(["Sr.", "User Name", "First Name", "Last Name", "Action"])  # Set header labels
        self.tableView.setModel(self.model)

        self.retranslateUi(manager_home_page)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(manager_home_page)
        
        self.users_profile_TableWidget.itemChanged.connect(self.print_table_data)
        
        self.setup_table_widget()
        self.setup_table_view(self.model)
        
        self.tabWidget.currentChanged.connect(self.tab_changed)
        # self.tabWidget.currentChanged.connect(lambda: self.tab_changed("model"))
        
        
    def tab_changed(self, index):
        print(index)
        
        if index == self.tabWidget.indexOf(self.tab_2):
            self.setup_table_view(self.model)
            QMessageBox.information(None, "Welcome", "Welcome to the table view!")
        
    def print_table_data(self, item):
        # Print the data whenever an item is changed (added, edited, etc.)
        print("Data added/edited in the table:")
        table_data = []
        
        for row in range(self.users_profile_TableWidget.rowCount()):
            row_data = []     
            for col in range(self.users_profile_TableWidget.columnCount()):
                item = self.users_profile_TableWidget.item(row, col)
                if item:
                    row_data.append(item.text())
                else:
                    row_data.append("")  # Empty cell
            print(row_data)
            table_data.append(row_data)
        
        # table_data = []

        # # Iterate through each cell in the table
        # for row in range(self.users_profile_TableWidget.rowCount()):
        #     for col in range(self.users_profile_TableWidget.columnCount()):
        #         item = self.users_profile_TableWidget.item(row, col)
        #         # Check if the item is not None (i.e., there is data in the cell)
        #         if item is not None:
        #             # Append the text of the item to the table_data list
        #             table_data.append(item.text())
        #         else:
        #             # If the item is None, append an empty string to represent an empty cell
        #             table_data.append("")

        # Print the single list containing all the table data
        print(table_data)          
         # Populate the model with the data
        # for row_index, row_data in enumerate(data):
        for row_index, row_data in enumerate(table_data):
            for col_index, col_data in enumerate(row_data):
                item = QtGui.QStandardItem(col_data)
                self.model.setItem(row_index, col_index, item)
            
    
            
    def search_table(self, text):
        # If the search input is empty, show all rows and return
        if not text:
            for row in range(self.users_profile_TableWidget.rowCount()):
                self.users_profile_TableWidget.setRowHidden(row, False)
            return

        # Get the number of rows and columns in the table
        rows = self.users_profile_TableWidget.rowCount()
        cols = self.users_profile_TableWidget.columnCount()

        # Iterate through each cell in the table
        for row in range(rows):
            row_hidden = True  # Flag to indicate if the row should be hidden
            for col in range(cols):
                item = self.users_profile_TableWidget.item(row, col)
                if item and text.lower() in item.text().lower():  # Check if the text is in the cell
                    row_hidden = False  # If text found, row should not be hidden
                    break
            self.users_profile_TableWidget.setRowHidden(row, row_hidden)  # Hide or show the row based on the flag
            
    def setup_table_widget(self):
        # Previous code...
        # self.users_profile_TableWidget.setColumnCount(5)
        self.users_profile_TableWidget.setHorizontalHeaderLabels(["Sr.", "User Name", "First Name", "Last Name", "Action"])  # Set header labels
        # self.users_profile_TableWidget.setModel(self.model)  # Set the shared model
        
    def setup_table_view(self,model):
        # Previous code...
        self.tableView.setModel(model)  # Set the shared model
        pass

    def retranslateUi(self, manager_home_page):
        _translate = QtCore.QCoreApplication.translate
        manager_home_page.setWindowTitle(_translate("manager_home_page", "Manager Window"))
        self.create_user_profile_PB.setText(_translate("manager_home_page", "Create User Profile"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("manager_home_page", "Home"))
        self.users_profile_TableWidget.setSortingEnabled(False)
        __sortingEnabled = self.users_profile_TableWidget.isSortingEnabled()
        self.users_profile_TableWidget.setSortingEnabled(False)
        item = self.users_profile_TableWidget.item(0, 0)
        item.setText(_translate("manager_home_page", "Sr."))
        item = self.users_profile_TableWidget.item(0, 1)
        item.setText(_translate("manager_home_page", "User Name"))
        item = self.users_profile_TableWidget.item(0, 2)
        item.setText(_translate("manager_home_page", "First Name"))
        item = self.users_profile_TableWidget.item(0, 3)
        item.setText(_translate("manager_home_page", "Last Name"))
        item = self.users_profile_TableWidget.item(0, 4)
        item.setText(_translate("manager_home_page", "Action"))
        self.users_profile_TableWidget.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("manager_home_page", "Users/Groups"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("manager_home_page", "Permissions"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    manager_home_page = QtWidgets.QMainWindow()
    ui = Ui_manager_home_page()
    ui.setupUi(manager_home_page)
    manager_home_page.show()
    sys.exit(app.exec_())